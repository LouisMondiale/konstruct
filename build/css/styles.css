/* Colors */

/* Fonts */

/* Global */

body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

.wrapper {
  max-width: 940px;
  margin: 0 auto;
  padding-left: 10px;
  padding-right: 10px;
}

body {
  font-family: 'Open Sans', sans-serif;
  color: #48555b;
}

.devider {
  height: 1px;
  background: #e6e6e6;
}

/* Header */

.header {
  background: url(../img/bg.jpg) top no-repeat;
}

.header__inner {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center;
  padding-top: 40px;
  padding-bottom: 70px;
  text-align: center;
}

.header__title {
  font-family: 'Bebas Neue', cursive;
  font-size: 60px;
  margin-top: 32%;
  letter-spacing: 5.7px;
  color: #ffffff;
}

.header__subtitle {
  font-weight: 600;
  color: #ffffff;
}

.header__scroll {
  margin-top: 23%;
  font-weight: 600;
  font-size: 11px;
  letter-spacing: 3.7px;
  text-transform: uppercase;
  color: #ffffff;
}

/* Navigation */

.navigation__inner {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-pack: justify;
          justify-content: space-between;
  padding: 24px 0;
}

.navigation__logo {
  text-align: center;
}

.navigation__item {
  display: inline-block;
  margin: 0 15px;
  text-transform: uppercase;
  font-weight: 600;
  font-size: 12px;
  letter-spacing: 1px;
}

.navigation__link {
  color: #48555b;
  text-decoration: none;
}

.navigation__link:hover {
  color: #00a4e5;
}

/* Story */

.story__title {
  text-align: center;
  margin-top: 6%;
  font-weight: 700;
  font-size: 18px;
  letter-spacing: 2px;
  text-transform: uppercase;
}

.story__title::after {
  content: "";
  width: 50px;
  height: 2px;
  background: #00a4e5;
  display: block;
  margin: 10px auto 0;
}

.story__inner {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  -webkit-box-pack: center;
          justify-content: center;
  margin-top: 5%;
}

.story__founded {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(100% / 12 * 5 - 20px);
  margin-right: auto;
}

.story__img {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(100% / 12 * 2 - 20px);
  align-self: flex-end;
  padding-top: 15px;
  display: block;
}

.founded__title {
  font-weight: 700;
  font-size: 20px;
  line-height: 27px;
}

.founded__title_blue {
  color: #00a4e5;
}

.founded__text {
  font-size: 13px;
  line-height: 23px;
  margin-top: 30px;
}

/* Capabilities */

.capabilities__inner {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  margin-top: 13%;
  -webkit-box-pack: justify;
          justify-content: space-between;
}

.capabilities__title {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: 200px;
  font-weight: 700;
  font-size: 18px;
  letter-spacing: 2px;
  text-transform: uppercase;
}

.capabilities__title::after {
  content: "";
  width: 50px;
  height: 2px;
  background: #00a4e5;
  display: block;
  margin-top: 10px;
}

.capabilities__text {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: 50%;
  font-size: 11px;
  line-height: 19px;
  letter-spacing: 0.2px;
}

.capabilities__btn {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  display: block;
  width: 150px;
  height: 40px;
  background: #00a4e5;
  color: #fff;
  text-transform: uppercase;
  text-align: center;
  font-size: 13px;
  letter-spacing: 0.5px;
  outline: 0;
  cursor: pointer;
  border: none;
}

.capabilities__row {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  margin-top: 8%;
}

.service {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(100% / 12 * 4 - 20px);
  border: 1px solid #e6e6e6;
  padding: 32px 29px;
  margin-top: 20px;
}

.service__title {
  font-weight: 700;
  line-height: 24px;
  letter-spacing: 0.34px;
  text-transform: uppercase;
  margin-top: 25px;
}

.service__text {
  font-size: 13px;
  line-height: 23px;
  letter-spacing: 0.2px;
  margin-top: 13px;
}

/* Touch */

.touch {
  background: url(../img/touch_bg.jpg) center no-repeat;
  min-height: 495px;
}

.touch__title {
  font-weight: 700;
  font-size: 30px;
  line-height: 36px;
  letter-spacing: 0.15px;
  text-align: center;
  max-width: 350px;
  margin: 21% auto 0;
}

.touch__btn {
  display: block;
  width: 150px;
  height: 40px;
  background: #00a4e5;
  color: #fff;
  text-transform: uppercase;
  text-align: center;
  font-size: 13px;
  letter-spacing: 0.5px;
  outline: 0;
  cursor: pointer;
  border: none;
  margin: 4% auto 0;
}

@media screen and (max-width: 780px) {
  .wrapper {
    padding-left: 15px;
    padding-right: 15px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
